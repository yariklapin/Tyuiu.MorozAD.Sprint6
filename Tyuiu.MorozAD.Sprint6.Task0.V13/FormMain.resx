<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictBoxFormula_MAD.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHsAAABACAYAAAA6eggRAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABKFJREFUeF7tm81r20gYh/c/1GkICAIiYBEQgZqA6KGiVJeEELFQU6gONoU6h80h
        uBBTigOLl+DAohCcQzEU92IIXlgMBkEQGH59R5aLd/NlR4orZd4HBNHIAaPHmvdjNL+BUQaWrRAsWyFY
        tkKwbIVg2QrBshWCZSsEy1YIlq0QLDstYR+NPRu77ypwNgSsahdhcilvsOyU9D7o0NZ20RnTyXkFmibg
        X06v5Q2WnZLhFxfmtof2P3QSy9bhneXz2WbZmRGisy8gXtTRu06GcgbLzoKrAI0/fLglHe6XYTKYP1h2
        loxacDQNxkE/GcgXLPsuxl3UX5kwNw0IUUbtso/2vgWzROcbPrpxWA7RO3DgVAOM4n/qwifZ2noNvfg8
        X7Ds25j0UNsw4J9PE63gLQkkifrbAP3PDgT9bR/L6Zo+t65BbB9O4/TsyabP5TFFY9m3MDpxYrEzYVPZ
        JurfIvpbQBMmal+Ti4MWvC0LLtXZ7pYJ510L/Xwm4yz7Vq5DhD8z6gEON0m2qCCYJEMFhWU/xL9N2DIO
        v24lcbm4sOyHiBslGspHg2QAiMIQUQGfcpZ9gwjdqklJmI4apdRxO1S2QC+Sy9cdeGseOjmNy/fBsm9A
        GfaajNE2mt8CVCjb1jSDkjN5LUT3vQGjmsfC6mFY9i0MP7swrDJsyrK9kwAtqq/1kgP3VRnuQYBhQRM1
        lq0QLFshWLZCpJct39R4Q0nLuoAozXrGU4Z/eShv19DN6ZKfaqSUTWUKZaf2J6pBL/y4Hp32jCVJ50nz
        Ct95ei6kky0b/0kbsVeV9SjVprOe8bgN957OU3Tuw9yUq0qLH5XTAha3OSKd7EmEcBxNV4lkPSqX9mZP
        cdJ5MnO6tqsi2SRoNIXLZT99rtlwo/PE/HIykT0TWzlPBjBE05bxehftFc+8cjZ5TkeWZCK7+15+sTIa
        V8mA7B/LL2s37uw2ccx+PHIhJqTouSyZyB4cWSRbT96XnvaP5a9yflpnsiE68+KQKauczpIlbTYx+3qA
        5r4FIXSYJRO6XEj4z7TOZMZVE67sabxuYrBkSZtedpyRz6/vDtDYItmimMuAz5mUsiN0fhfxlD1rpkSU
        met0bhWp5JqMEFR3sbtjQ1834Bw9z3IxpewRmi/pKV5z0JTJ2TiAv6FBvGwsPcX8SobHNizKL+REFJ7K
        mCjgnT0iA0pBdEX37oVA+dPTbTJIPY2HX+uwKYboFKsNw4J33MOoQKJ//mCFi5Zs9c0qif0OzVtPTQ91
        qjIMw4BJ91DOkLmW/RwYXRzC/9jGQGa3kwAVuulip73Sd7/l7MKyV0w8jQsT/sVqs0uWnZaFtvDMQTlH
        ZaOMyunT3fC7YNlpWHgLT0LYhW+VUb+kz18P0f2+2rfEWXYKltrCE/Zx+MZG7e9h3DMY/unB+LDa7h/L
        TsPCW3hCtHemmfD84Zzwk11Mst7C870B+3+LNPcdiyzgsOysKMAWHpb9aIq3hYdlP5ribeFh2Skoxhae
        EVp707iui1lyKGDIWL+X/RZhNWI2E8OyFYJlKwTLVgiWrRAsWyFYtkKwbIVg2QrBshWCZSsEy1YG4AdZ
        mT0PUzxxpwAAAABJRU5ErkJggg==
</value>
  </data>
</root>